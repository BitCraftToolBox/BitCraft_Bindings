// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.2.0 (commit dev).

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void EmpireCraftSuppliesHandler(ReducerEventContext ctx, ulong foundryEntityId);
        public event EmpireCraftSuppliesHandler? OnEmpireCraftSupplies;

        public void EmpireCraftSupplies(ulong foundryEntityId)
        {
            conn.InternalCallReducer(new Reducer.EmpireCraftSupplies(foundryEntityId), this.SetCallReducerFlags.EmpireCraftSuppliesFlags);
        }

        public bool InvokeEmpireCraftSupplies(ReducerEventContext ctx, Reducer.EmpireCraftSupplies args)
        {
            if (OnEmpireCraftSupplies == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch(ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnEmpireCraftSupplies(
                ctx,
                args.FoundryEntityId
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class EmpireCraftSupplies : Reducer, IReducerArgs
        {
            [DataMember(Name = "foundry_entity_id")]
            public ulong FoundryEntityId;

            public EmpireCraftSupplies(ulong FoundryEntityId)
            {
                this.FoundryEntityId = FoundryEntityId;
            }

            public EmpireCraftSupplies()
            {
            }

            string IReducerArgs.ReducerName => "empire_craft_supplies";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags EmpireCraftSuppliesFlags;
        public void EmpireCraftSupplies(CallReducerFlags flags) => EmpireCraftSuppliesFlags = flags;
    }
}
