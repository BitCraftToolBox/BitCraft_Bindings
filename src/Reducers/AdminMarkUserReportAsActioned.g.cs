// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.


#nullable enable

using System;
using SpacetimeDB;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace BitCraftGlobal.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void AdminMarkUserReportAsActionedHandler(ReducerEventContext ctx, ulong entityId, bool actioned);
        public event AdminMarkUserReportAsActionedHandler? OnAdminMarkUserReportAsActioned;

        public void AdminMarkUserReportAsActioned(ulong entityId, bool actioned)
        {
            conn.InternalCallReducer(new Reducer.AdminMarkUserReportAsActioned(entityId, actioned), this.SetCallReducerFlags.AdminMarkUserReportAsActionedFlags);
        }

        public bool InvokeAdminMarkUserReportAsActioned(ReducerEventContext ctx, Reducer.AdminMarkUserReportAsActioned args)
        {
            if (OnAdminMarkUserReportAsActioned == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnAdminMarkUserReportAsActioned(
                ctx,
                args.EntityId,
                args.Actioned
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class AdminMarkUserReportAsActioned : Reducer, IReducerArgs
        {
            [DataMember(Name = "entity_id")]
            public ulong EntityId;
            [DataMember(Name = "actioned")]
            public bool Actioned;

            public AdminMarkUserReportAsActioned(
                ulong EntityId,
                bool Actioned
            )
            {
                this.EntityId = EntityId;
                this.Actioned = Actioned;
            }

            public AdminMarkUserReportAsActioned()
            {
            }

            string IReducerArgs.ReducerName => "admin_mark_user_report_as_actioned";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags AdminMarkUserReportAsActionedFlags;
        public void AdminMarkUserReportAsActioned(CallReducerFlags flags) => AdminMarkUserReportAsActionedFlags = flags;
    }
}
