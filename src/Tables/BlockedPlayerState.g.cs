// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.


#nullable enable

using System;
using SpacetimeDB;
using SpacetimeDB.BSATN;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace BitCraftGlobal.Types
{
    public sealed partial class RemoteTables
    {
        public sealed class BlockedPlayerStateHandle : RemoteTableHandle<EventContext, BlockedPlayerState>
        {
            protected override string RemoteTableName => "blocked_player_state";

            public sealed class OwnerBlockedEntityIdIndex : BTreeIndexBase<(ulong OwnerEntityId, ulong BlockedEntityId)>
            {
                protected override (ulong OwnerEntityId, ulong BlockedEntityId) GetKey(BlockedPlayerState row) => (row.OwnerEntityId, row.BlockedEntityId);

                public OwnerBlockedEntityIdIndex(BlockedPlayerStateHandle table) : base(table) { }
            }

            public readonly OwnerBlockedEntityIdIndex OwnerBlockedEntityId;

            public sealed class OwnerEntityIdIndex : BTreeIndexBase<ulong>
            {
                protected override ulong GetKey(BlockedPlayerState row) => row.OwnerEntityId;

                public OwnerEntityIdIndex(BlockedPlayerStateHandle table) : base(table) { }
            }

            public readonly OwnerEntityIdIndex OwnerEntityId;

            internal BlockedPlayerStateHandle(DbConnection conn) : base(conn)
            {
                OwnerBlockedEntityId = new(this);
                OwnerEntityId = new(this);
            }
        }

        public readonly BlockedPlayerStateHandle BlockedPlayerState;
    }
}
