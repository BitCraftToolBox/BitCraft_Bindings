// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.


#nullable enable

using System;
using SpacetimeDB;
using SpacetimeDB.BSATN;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace BitCraftGlobal.Types
{
    public sealed partial class RemoteTables
    {
        public sealed class DirectMessageStateHandle : RemoteTableHandle<EventContext, DirectMessageState>
        {
            protected override string RemoteTableName => "direct_message_state";

            public sealed class EntityIdUniqueIndex : UniqueIndexBase<ulong>
            {
                protected override ulong GetKey(DirectMessageState row) => row.EntityId;

                public EntityIdUniqueIndex(DirectMessageStateHandle table) : base(table) { }
            }

            public readonly EntityIdUniqueIndex EntityId;

            public sealed class ReceiverEntityIdIndex : BTreeIndexBase<ulong>
            {
                protected override ulong GetKey(DirectMessageState row) => row.ReceiverEntityId;

                public ReceiverEntityIdIndex(DirectMessageStateHandle table) : base(table) { }
            }

            public readonly ReceiverEntityIdIndex ReceiverEntityId;

            public sealed class SenderEntityIdIndex : BTreeIndexBase<ulong>
            {
                protected override ulong GetKey(DirectMessageState row) => row.SenderEntityId;

                public SenderEntityIdIndex(DirectMessageStateHandle table) : base(table) { }
            }

            public readonly SenderEntityIdIndex SenderEntityId;

            internal DirectMessageStateHandle(DbConnection conn) : base(conn)
            {
                EntityId = new(this);
                ReceiverEntityId = new(this);
                SenderEntityId = new(this);
            }

            protected override object GetPrimaryKey(DirectMessageState row) => row.EntityId;
        }

        public readonly DirectMessageStateHandle DirectMessageState;
    }
}
