// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.


#nullable enable

using System;
using SpacetimeDB;
using SpacetimeDB.BSATN;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace BitCraftGlobal.Types
{
    public sealed partial class RemoteTables
    {
        public sealed class FriendsStateHandle : RemoteTableHandle<EventContext, FriendsState>
        {
            protected override string RemoteTableName => "friends_state";

            public sealed class EntityIdUniqueIndex : UniqueIndexBase<ulong>
            {
                protected override ulong GetKey(FriendsState row) => row.EntityId;

                public EntityIdUniqueIndex(FriendsStateHandle table) : base(table) { }
            }

            public readonly EntityIdUniqueIndex EntityId;

            public sealed class OwnerFriendEntityIdIndex : BTreeIndexBase<(ulong OwnerEntityId, ulong FriendEntityId)>
            {
                protected override (ulong OwnerEntityId, ulong FriendEntityId) GetKey(FriendsState row) => (row.OwnerEntityId, row.FriendEntityId);

                public OwnerFriendEntityIdIndex(FriendsStateHandle table) : base(table) { }
            }

            public readonly OwnerFriendEntityIdIndex OwnerFriendEntityId;

            public sealed class OwnerEntityIdIndex : BTreeIndexBase<ulong>
            {
                protected override ulong GetKey(FriendsState row) => row.OwnerEntityId;

                public OwnerEntityIdIndex(FriendsStateHandle table) : base(table) { }
            }

            public readonly OwnerEntityIdIndex OwnerEntityId;

            internal FriendsStateHandle(DbConnection conn) : base(conn)
            {
                EntityId = new(this);
                OwnerFriendEntityId = new(this);
                OwnerEntityId = new(this);
            }

            protected override object GetPrimaryKey(FriendsState row) => row.EntityId;
        }

        public readonly FriendsStateHandle FriendsState;
    }
}
